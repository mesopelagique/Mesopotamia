classDiagram	class NullLiteral {	}	class IfStatement {	}	class TemplateElement {	}	class ObjectExpression {	}	class StringLiteral {	}	class ReturnStatement {	}	class Program {	}	class SwitchCase {	}	class ExpressionStatement {	}	class BreakStatement {	}	class CommentLine {	}	class ClassBody {	}	class VariableDeclarator {	}	class BlockStatement {	}	class SwitchStatement {	}	class File {	}	class ArrayExpression {	}	class ForStatement {	}	class Statement {	}	class ObjectProperty {	}	class ExportDefaultDeclaration {	}	class Parser {	}	class ClassDeclaration {	}	class TemplateLiteral {	}	class VariableDeclaration {	}	class Identifier {	}	class UpdateExpression {	}	class ConditionalExpression {	}	class Declaration {	}	class BinaryExpression {	}	class FunctionDeclaration {	}	class MemberExpression {	}	class LogicalExpression {	}	class Node {	}	class BooleanLiteral {	}	class Expression {	}	class AssignmentExpression {	}	class CallExpression {	}	class Literal {	}	class ClassMethod {	}	class NumericLiteral {	}	class CommentBlock {	}Literal <|-- NullLiteralStatement <|-- IfStatementLiteral <|-- TemplateElementExpression <|-- ObjectExpressionLiteral <|-- StringLiteralStatement <|-- ReturnStatementNode <|-- ProgramNode <|-- SwitchCaseStatement <|-- ExpressionStatementStatement <|-- BreakStatementNode <|-- CommentLineNode <|-- ClassBodyNode <|-- VariableDeclaratorStatement <|-- BlockStatementStatement <|-- SwitchStatementNode <|-- FileExpression <|-- ArrayExpressionStatement <|-- ForStatementNode <|-- StatementNode <|-- ObjectPropertyDeclaration <|-- ExportDefaultDeclarationDeclaration <|-- ClassDeclarationLiteral <|-- TemplateLiteralDeclaration <|-- VariableDeclarationNode <|-- IdentifierExpression <|-- UpdateExpressionExpression <|-- ConditionalExpressionNode <|-- DeclarationExpression <|-- BinaryExpressionDeclaration <|-- FunctionDeclarationExpression <|-- MemberExpressionExpression <|-- LogicalExpressionLiteral <|-- BooleanLiteralNode <|-- ExpressionExpression <|-- AssignmentExpressionExpression <|-- CallExpressionNode <|-- LiteralNode <|-- ClassMethodLiteral <|-- NumericLiteralNode <|-- CommentBlock